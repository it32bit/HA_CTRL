{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Configure",
      "dependsOrder": "sequence",
      "dependsOn": [
        "clean-extra"
      ],
      "type": "shell",
      "command": "cmake",
      "args": [
        "-S",
        "${workspaceFolder}",
        "-B",
        "${workspaceFolder}/build/debug",
        "--preset",
        "debug"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Build Bootloader",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Configure"
      ],
      "type": "cmake",
      "command": "build",
      "targets": [
        "ha-ctrl-boot"
      ],
      "preset": "debug",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Build App",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Configure"
      ],
      "type": "cmake",
      "command": "build",
      "targets": [
        "ha-ctrl-app"
      ],
      "preset": "debug",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Build Both",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Configure"
      ],
      "type": "cmake",
      "command": "build",
      "targets": [
        "check_size"
      ],
      "preset": "debug",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Flash Bootloader",
      "type": "shell",
      "command": "STM32_Programmer_CLI",
      "args": [
        "-c",
        "port=SWD",
        "-d",
        "${workspaceFolder}/build/bin/ha-ctrl-boot.elf",
        "-hardRst",
        "-rst",
        "--start"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Flash App",
      "type": "shell",
      "command": "STM32_Programmer_CLI",
      "args": [
        "-c",
        "port=SWD",
        "-d",
        "${workspaceFolder}/build/bin/ha-ctrl-app.elf",
        "-hardRst",
        "-rst",
        "--start"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "ReBuildFlashBoth",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Build Bootloader",
        "Build App",
        "Flash Bootloader",
        "Flash App"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Clean",
      "type": "cmake",
      "command": "build",
      "targets": [
        "clean-extra"
      ],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Clang-Tidy",
      "type": "cmake",
      "command": "build",
      "targets": [
        "clang_tidy_both"
      ],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build",
      "detail": "Static Analysis Tool Output: Console and File",
      "problemMatcher": []
    },
    {
      "label": "Clang-Tidy File",
      "type": "cmake",
      "command": "build",
      "targets": [
        "clang_tidy_log"
      ],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build",
      "detail": "Static Analysis Tool Output: /bin/clang-tidy-warn.log",
      "problemMatcher": []
    },
    {
      "label": "Clang-Tidy Consle",
      "type": "cmake",
      "command": "build",
      "targets": [
        "clang_tidy_console"
      ],
      "preset": "${command:cmake.activeBuildPresetName}",
      "group": "build",
      "detail": "Static Analysis Tool Output: Console",
      "problemMatcher": []
    },
    {
      "label": "Clang-Tidy HTML",
      "type": "shell",
      "command": "${workspaceFolder}/Tools/clang-tidy-html.sh",
      "group": "build",
      "detail": "Static Analysis Tool Output: LOG & HTML",
      "problemMatcher": []
    },
    {
      "label": "List all available communication interfaces",
      "type": "shell",
      "command": "STM32_Programmer_CLI",
      "args": [
        "--list"
      ],
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "Build and Run Unit Tests",
      "type": "shell",
      "command": "cmake -S . -B build-tests -DBUILD_TESTING=ON && cmake --build build-tests && ./build-tests/tests/run_tests",
      "group": "build",
      "problemMatcher": []
    }
  ]
}